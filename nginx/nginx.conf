upstream plex-app {
  server plex:32400;
}

server {
  listen 80;
  listen [::]:80;

  server_name <your-domain> <www.your-domain>;

  location ^~ /.well-known/acme-challenge {
    allow all;
    root /var/www/letsencrypt;
  }

  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  server_name <your-domain> <www.your-domain>;

  server_tokens off;
  ssl_buffer_size 8k;

  ssl_certificate /etc/letsencrypt/live/<your-domain>/fullchain.pem;  # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/<your-domain>/privkey.pem;  # managed by Certbot

#  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;  # managed by Certbot
  ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;  # used for SSL handshake (improving Certbot)

#  Certbot options-ssl-nginx.conf file content
#  Certbot can't configure Nginx https block because they run in separate containers.
  ssl_session_cache shared:le_nginx_SSL:10m;
  ssl_session_timeout 1440m;
  ssl_session_tickets off;

  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers off;

  ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

  resolver 8.8.8.8;

  location / {
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Ssl on;
    proxy_redirect off;
    proxy_pass http://plex-app;
  }
}
